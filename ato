#!/usr/bin/python
import RPi.GPIO as GPIO
import signal
import time
import requests
from datetime import datetime
from relay import *

isPumping = False
startedPumping = None

needsWaterPin = 21
enoughWaterPin = 17
pumpRelayId = 8

def initialize():
    setupRelayOUT(pumpRelayId)
    setRelay(pumpRelayId, True)
    GPIO.setup(needsWaterPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
    GPIO.setup(enoughWaterPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)

def signalHandler(signal, frame):
    print("Shutting down..")
    setupRelayOUT(pumpRelayId)
    setRelay(pumpRelayId, False)
    GPIO.cleanup()
signal.signal(signal.SIGINT, signalHandler)

def togglePump(active):
    setRelay(pumpRelayId, not active)
    data = {
        "date": datetime.now().isoformat("T"),
        "switchOn": active
    }
    try:
        requests.put("http://reef.xeli.eu/api/ato-events", json=data);
    except requests.exceptions.RequestException:
        print "Connection error"

    if active:
        print("Energize!")
    else:
        print("Switching off..")

def isActive(pin, duration):
    for x in xrange(duration):
       if GPIO.input(pin):
           return False
       time.sleep(0.5)
    return True 

initialize()

while True:
    if not isPumping and isActive(needsWaterPin, 20):
        isPumping = True
        startedPumping = datetime.now()
        togglePump(True)

    if isPumping and (((datetime.now() - startedPumping).seconds > 10) or isActive(enoughWaterPin, 2)):
        isPumping = False
        togglePump(False)

    time.sleep(0.2)
